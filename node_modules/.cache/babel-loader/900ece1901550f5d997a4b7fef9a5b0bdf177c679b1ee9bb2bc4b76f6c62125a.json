{"ast":null,"code":"// 'use client';\n\n// import { useState } from 'react';\n// import { motion } from 'framer-motion';\n// import Fluffer from '../../images/fluffer.jpg';\n// import { Play } from 'lucide-react';\n\n// type MediaItem = {\n//   type: 'image' | 'video';\n//   src: string;\n//   alt?: string;\n//   thumbnail?: string;\n// };\n\n// const mediaItems: MediaItem[] = [\n//   { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Meme Coin Image 1' },\n//   { type: 'video', src: 'https://www.example.com/video1.mp4', thumbnail: '/placeholder.svg?height=400&width=600' },\n//   { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Meme Coin Image 2' },\n//   { type: 'video', src: 'https://www.example.com/video2.mp4', thumbnail: '/placeholder.svg?height=400&width=600' },\n// ];\n\n// export function MediaSection() {\n//   const [selectedItem, setSelectedItem] = useState<MediaItem | null>(null);\n\n//   const openModal = (item: MediaItem) => {\n//     setSelectedItem(item);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedItem(null);\n//   };\n\n//   return (\n//     <section id=\"media\" className=\"py-20\">\n//       <div className=\"container mx-auto px-4\">\n//         <h2 className=\"text-4xl font-bold mb-12 text-center\">Media Gallery</h2>\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           {mediaItems.map((item, index) => (\n//             <motion.div\n//               key={index}\n//               initial={{ opacity: 0, y: 20 }}\n//               whileInView={{ opacity: 1, y: 0 }}\n//               viewport={{ once: true }}\n//               transition={{ duration: 0.5, delay: index * 0.1 }}\n//               className=\"relative cursor-pointer\"\n//               onClick={() => openModal(item)}\n//             >\n//               <Image\n//                 src={item.type === 'image' ? item.src : item.thumbnail || ''}\n//                 alt={item.alt || 'Media item'}\n//                 width={600}\n//                 height={400}\n//                 className=\"rounded-lg\"\n//               />\n//               {item.type === 'video' && (\n//                 <div className=\"absolute inset-0 flex items-center justify-center\">\n//                   <Play size={48} className=\"text-white\" />\n//                 </div>\n//               )}\n//             </motion.div>\n//           ))}\n//         </div>\n//       </div>\n//       {selectedItem && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick={closeModal}>\n//           <div className=\"max-w-4xl w-full p-4\">\n//             {selectedItem.type === 'image' ? (\n//               <Image\n//                 src={selectedItem.src}\n//                 alt={selectedItem.alt || ''}\n//                 width={800}\n//                 height={600}\n//                 className=\"rounded-lg\"\n//               />\n//             ) : (\n//               <video src={selectedItem.src} controls className=\"w-full rounded-lg\" />\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </section>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/mac/Downloads/meme-coin-website/src/app/components/media-section.tsx"],"sourcesContent":["// 'use client';\n\n// import { useState } from 'react';\n// import { motion } from 'framer-motion';\n// import Fluffer from '../../images/fluffer.jpg';\n// import { Play } from 'lucide-react';\n\n// type MediaItem = {\n//   type: 'image' | 'video';\n//   src: string;\n//   alt?: string;\n//   thumbnail?: string;\n// };\n\n// const mediaItems: MediaItem[] = [\n//   { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Meme Coin Image 1' },\n//   { type: 'video', src: 'https://www.example.com/video1.mp4', thumbnail: '/placeholder.svg?height=400&width=600' },\n//   { type: 'image', src: '/placeholder.svg?height=400&width=600', alt: 'Meme Coin Image 2' },\n//   { type: 'video', src: 'https://www.example.com/video2.mp4', thumbnail: '/placeholder.svg?height=400&width=600' },\n// ];\n\n// export function MediaSection() {\n//   const [selectedItem, setSelectedItem] = useState<MediaItem | null>(null);\n\n//   const openModal = (item: MediaItem) => {\n//     setSelectedItem(item);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedItem(null);\n//   };\n\n//   return (\n//     <section id=\"media\" className=\"py-20\">\n//       <div className=\"container mx-auto px-4\">\n//         <h2 className=\"text-4xl font-bold mb-12 text-center\">Media Gallery</h2>\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n//           {mediaItems.map((item, index) => (\n//             <motion.div\n//               key={index}\n//               initial={{ opacity: 0, y: 20 }}\n//               whileInView={{ opacity: 1, y: 0 }}\n//               viewport={{ once: true }}\n//               transition={{ duration: 0.5, delay: index * 0.1 }}\n//               className=\"relative cursor-pointer\"\n//               onClick={() => openModal(item)}\n//             >\n//               <Image\n//                 src={item.type === 'image' ? item.src : item.thumbnail || ''}\n//                 alt={item.alt || 'Media item'}\n//                 width={600}\n//                 height={400}\n//                 className=\"rounded-lg\"\n//               />\n//               {item.type === 'video' && (\n//                 <div className=\"absolute inset-0 flex items-center justify-center\">\n//                   <Play size={48} className=\"text-white\" />\n//                 </div>\n//               )}\n//             </motion.div>\n//           ))}\n//         </div>\n//       </div>\n//       {selectedItem && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\" onClick={closeModal}>\n//           <div className=\"max-w-4xl w-full p-4\">\n//             {selectedItem.type === 'image' ? (\n//               <Image\n//                 src={selectedItem.src}\n//                 alt={selectedItem.alt || ''}\n//                 width={800}\n//                 height={600}\n//                 className=\"rounded-lg\"\n//               />\n//             ) : (\n//               <video src={selectedItem.src} controls className=\"w-full rounded-lg\" />\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </section>\n//   );\n// }\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}